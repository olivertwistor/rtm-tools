# This file is a sample of how a CSV configuration looks like. You can save a
# copy of this file with another name and use it for your own configuration on
# how to parse a CSV file into Remember The Milk tasks. Place it in the same
# folder as the application JAR file and reference it by name when requested
# from within the application to use it.
#
# Every configuration option in this file is explained with comments like this
# (starts with #). You can leave these comments in your own copy if you want,
# because comments are ignored by the CSV parser.

[csv]
# The delimiter is the character(s) that separates the columns in the CSV file.
delimiter = ";"
# The number of lines to skip in the beginning of the CSV file when parsing.
# This is useful if for example the first line is comprised of headings. Must
# not be negative.
skip.lines = 1

[task]
# The column index (begins with 1) in the CSV file where the name properties
# are.
column.index.name = 1
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist.
default.value.name = "Task"
# The column index (begins with 1) in the CSV file where the URL properties
# are. Default: 0 (not existing).
column.index.url = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.url = ""
# The column index (begins with 1) in the CSV file where the start date
# properties are. Default: 0 (not existing).
column.index.start = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.start = ""
# The column index (begins with 1) in the CSV file where the due date
# properties are. Default: 0 (not existing).
column.index.due = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.due = ""
# The column index (begins with 1) in the CSV file where the repeat properties
# are. Default: 0 (not existing).
column.index.repeat = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.repeat = ""
# The column index (begins with 1) in the CSV file where the location
# properties are. Default: 0 (not existing).
column.index.location = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.location = ""
# The column index (begins with 1) in the CSV file where the priority
# properties are. Default: 0 (not existing).
column.index.priority = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.priority = ""
# The column index (begins with 1) in the CSV file where the list properties
# are. Default: 0 (not existing).
column.index.list = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.list = ""
# The column index (begins with 1) in the CSV file where the tags properties
# are. Default: 0 (not existing).
column.index.tags = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. To set multiple tags, put a comma between them. For
# example: "home,fun,morning". Default: "".
default.value.tags = ""
# The column index (begins with 1) in the CSV file where the time estimate
# properties are. Default: 0 (not existing).
column.index.time.estimate = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.time.estimate = ""
# The column index (begins with 1) in the CSV file where the comments
# properties are. Default: 0 (not existing).
column.index.comments = 0
# Default value for the name property if the field in the CSV is empty or if
# the column doesn't exist. Default: "".
default.value.comments = ""
